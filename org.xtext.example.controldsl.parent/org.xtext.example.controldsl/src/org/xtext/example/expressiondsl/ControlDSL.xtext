grammar org.xtext.example.expressiondsl.ControlDSL with org.eclipse.xtext.common.Terminals

generate controlDSL "http://www.xtext.org/example/expressiondsl/ControlDSL"

Model:
	statements+=Statement+	
	;

Statement:
	Control
;

Control:
	'CTL-OPT' keywords+=ControlOption+ ';'
;

ControlOption:
	ControlOptionALLOC		|
	ControlOptionACTGRP		|
	ControlOptionALTSEQ		|
	ControlOptionALWNULL	|		
	ControlOptionAUT		|
	ControlOptionBNDDIR		|
	ControlOptionCCSID		|
	ControlOptionCCSIDCVT	|
	ControlOptionCOPYNEST	|
	ControlOptionCOPYRIGHT	|
	ControlOptionCURSYM		|
	ControlOptionCVTOPT		|
	ControlOptionDCLOPT		|
	ControlOptionDATEDIT	|
	ControlOptionDATEFMT	|
	ControlOptionDEBUG		|
	ControlOptionDECEDIT	|
	ControlOptionDECPREC	|
	ControlOptionDFTACTGRP	|
	ControlOptionDFTNAME	|
	ControlOptionENBPFRCOL	|
	ControlOptionEXPROPTS	|
	ControlOptionEXTBININT	|
	ControlOptionFIXNBR		|
	ControlOptionFLTDIV		|
	ControlOptionFORMSALIGN |
	ControlOptionFTRANS		|
	ControlOptionGENLVL		|
	ControlOptionINDENT		|
	ControlOptionINTPREC	|
	ControlOptionLANGID		|
	ControlOptionMAIN		|
	ControlOptionNOMAIN		|
	ControlOptionOPENOPT	|
	ControlOptionOPTIMIZE	|
	ControlOptionOPTION		|
	ControlOptionPGMINFO	|
	ControlOptionPRFDTA		|
	ControlOptionSRTSEQ		|
	ControlOptionSTGMDL		|
	ControlOptionTEXT		|
	ControlOptionTHREAD		|
	ControlOptionTIMFMT		|
	ControlOptionTRUNCNBR	|
	ControlOptionUSRPRF		|
	ControlOptionVALIDATE
;

// ALLOC - Start ---------------------------------------------------

ControlOptionALLOC:
	// Method 1:
	'ALLOC' '(' option=('*STGMDL'|'*TERASPACE'|'*SNGLVL') ')'
	
//	// Method 2:
//	'ALLOC' '(' option=AllocOptions ')'
//;
//
//enum AllocOptions:
//	STGMDL='*STGMDL'		|
//	TERRASPACE='*TERASPACE'	|
//	SNGLVL='*SNGLVL'
;
// ALLOC - End -----------------------------------------------------

// ACTGRP - Start ---------------------------------------------------

ControlOptionACTGRP:
	// Method 1:
	'ACTGRP' '(' option=('*STGMDL' | '*NEW' | '*CALLER' | STRING) ')'
	
//	// Method 2:
//	'ACTGRP' '(' option=(ActGrpOptions | STRING) ')'
//;
//enum ActGrpOptions:
//	STGMDL='*STGMDL' |
//	NEW='*NEW'		 |
//	CALLER='*CALLER'
;
// ACTGRP - End -----------------------------------------------------

// ALTSEQ - Start ---------------------------------------------------
ControlOptionALTSEQ: {ControlOptionALTSEQ}
	// Method 1:
	'ALTSEQ' (
		 '(' option=('*NONE' | '*SRC' | '*EXT' ) ')'
	)?
	
//	// Method 2:
//	'ALTSEQ' (
//		 '(' option=AltSeqOptions ')'
//	)?
//;
//enum AltSeqOptions:
//	NONE='*NONE' |
//	SRC='*SRC'	 |
//	EXT='*EXT'
;
// ALTSEQ - End -----------------------------------------------------

// ALWNULL - Start ---------------------------------------------------
ControlOptionALWNULL: {ControlOptionALWNULL}
	// Method 1:
	'ALWNULL' '(' option=('*NO' | '*INPUTONLY' | '*USRCTL' ) ')'
	
//	// Method 2:
//	'ALWNULL' (
//		 '(' option=AlwNullOptions ')'
//	)?
//;
//enum AlwNullOptions:
//	NO='*NO'				|
//	INPUTONLY='*INPUTONLY'	|
//	USRCTL='*USRCTL'
;
// ALWNULL - End -----------------------------------------------------

// AUT - Start -------------------------------------------------------
ControlOptionAUT:
	// Method 1:
	'AUT' '(' option=('*LIBRCRTAUT' | '*ALL' | '*CHANGE' | '*USE' | '*EXCLUDE' | STRING) ')'
	
//	// Method 2:
//	'AUT' '(' option=(AutOptions|STRING) ')'
//;
//enum AutOptions:
// LIBCRTAUT='*LIBRCRTAUT'	|
// ALL='*ALL'				|
// CHANGE='*CHANGE'			|
// USE='*USE'				|
// EXCLUDE='*EXCLUDE'
;
// AUT - End --------------------------------------------------------

// BNDDIR - Start ---------------------------------------------------
ControlOptionBNDDIR:
	'BNDDIR' '(' bnddirs+=STRING (':' bnddirs+=STRING)* ')'
;
// BNDDIR - End -----------------------------------------------------

// CCSID - Start ----------------------------------------------------
ControlOptionCCSID:
	'CCSID' '('( 
		option=( ControlOptionCCSIDExact	|
				 ControlOptionCCSIDChar		|
				 ControlOptionCCSIDGraph	|
				 ControlOptionCCSIDUcs2
		)
	)')'
;

ControlOptionCCSIDExact:
	parm1='*EXACT'
;
ControlOptionCCSIDChar:
//	// Method 1	:
//	parm1='*CHAR' ':' parm2=('*JOBRUN' | '*JOBRUNMIX' | '*UTF8' | '*HEX' | INT)
	
	// Method 2 :
	parm1='*CHAR' ':' parm2=(ControlOptionCCSIDCharOptions | INT)
;
ControlOptionCCSIDCharOptions:
	JOBRUN='*JOBRUN'		|
	JOBRUNMIX='*JOBRUNMIX'	|
	UTF8='*UTF8'			|
	HEX='*HEX' 	
;
ControlOptionCCSIDGraph:
	// Method 1 : 
	parm1='*GRAPH' ':' parm2=('*JOBRUN' | '*SRC' | '*HEX' | '*IGNORE' | INT)

//	// Method 2 :
//	parm1='*GRAPH' ':' parm2=(ControlOptionCCSIDGraphOptions | INT)
//;
//ControlOptionCCSIDGraphOptions:
//	JOBRUN='*JOBRUN' |
//	SRC='*SRC'		 |
//	HEX='*HEX'		 |
//	IGNORE='*IGNORE'
;
ControlOptionCCSIDUcs2:
	parm1='*UCS2' ':' parm2=('*UTF16' | INT)
;
// CCSID - End ------------------------------------------------------

ControlOptionCCSIDCVT:
	'CCSIDCVT' '(' option=('*EXCP' | '*LIST') ')'
;
ControlOptionCOPYNEST:
	'COPYNEST' '(' option=INT ')'
;
ControlOptionCOPYRIGHT:
	'COPYRIGHT' '(' option=STRING ')'
;
ControlOptionCURSYM:
	'CURSYM' '(' option=STRING ')'
;

// CVTOPT - Start ---------------------------------------------------
ControlOptionCVTOPT:
//	// Method 1:
//	'CVTOPT' '('
//				 options+=('*DATETIME'|'*NODATETIME'|'*GRAPHIC' |'*NOGRAPHIC'|'*VARCHAR' |'*NOVARCHAR'|'*VARGRAPHIC'|'*NOVARGRAPHIC')
//		    (':' options+=('*DATETIME'|'*NODATETIME'|'*GRAPHIC' |'*NOGRAPHIC'|'*VARCHAR' |'*NOVARCHAR'|'*VARGRAPHIC'|'*NOVARGRAPHIC')*
//	')'

	// Method 2:
	'CVTOPT' '(' options+=CvtOptOptions (':' options+=CvtOptOptions)* ')'
;
enum CvtOptOptions:
	DATETIME='*DATETIME'		|
	NODATETIME='*NODATETIME'	|
	GRAPHIC='*GRAPHIC'			|
	NOGRAPHIC='*NOGRAPHIC'		|
	VARCHAR='*VARCHAR'			|
	NOVARCHAR='*NOVARCHAR'		|
	VARGRAPHIC='*VARGRAPHIC'	|
	NOVARGRAPHIC='*NOVARGRAPHIC'
;
// CVTOPT - End -----------------------------------------------------

// DCLOPT - Start ---------------------------------------------------
ControlOptionDCLOPT:
	// Method 1:
	'DCLOPT' '(' option='*NOCHGDSLEN' ')'
	
//	// Method 2:
//	'DCLOPT(*NOCHGDSLEN)'
;
// DCLOPT - End -----------------------------------------------------

ControlOptionDATEDIT:
	'DATEDIT' '(' fmt='TODO' sep='/' ')'
;
ControlOptionDATEFMT:
	'DATFMT' '(' fmt='TODO' sep='/' ')'
;

// DEBUG - Start ----------------------------------------------------
ControlOptionDEBUG: {ControlOptionDEBUG}
	// Method 1:
	'DEBUG' ( '(' option=('*INPUT' | '*DUMP' | '*XMLSAX' | '*NO' | '*YES' ) ')' )?
	
//	// Method 2:
//	'DEBUG' (
//		 '(' option=DebugOptions ')'
//	)?
//;
//enum DebugOptions:
//	INPUT='*INPUT'	|
//	DUMP='*DUMP'	|
//	XMLSAX='*XMLSAX'|
//	NO='*NO'		|
//	YES='*YES'
;
// DEBUG - End ------------------------------------------------------

ControlOptionDECEDIT:
	'DECEDIT' '(' option=( '*JOBRUN' | STRING ) ')'
;
ControlOptionDECPREC:
	'DECPREC' '(' option=('30' | '31' | '63') ')'
;
ControlOptionDFTACTGRP:
	'DFTACTGRP' '(' option=('*YES' | '*NO' ) ')'
;
ControlOptionDFTNAME:
	'DFTNAME' '(' option=STRING ')'
;
ControlOptionENBPFRCOL:
	'ENBPFRCOL' '(' option=('*PEP' | '*ENTRYEXIT' | '*FULL') ')'
;
ControlOptionEXPROPTS:
	'EXPROPTS' '(' option=('*MAXDIGITS' | '*RESDECPOS') ')'
;
ControlOptionEXTBININT: {ControlOptionEXTBININT}
	'EXTNININT' ( '(' option=( '*NO' | '*YES') ')' )?
;
ControlOptionFIXNBR:
	'FIXNBR' '('
		option=( ('*ZONED'|'*NOZONED') | ('*INPUTPACKED'|'*NOINPUTPACKED') ) // <<<=== Good Idea or Bad
	')'
;
ControlOptionFLTDIV: {ControlOptionFLTDIV}
	'FLTDIV' ( '(' option=( '*NO' | '*YES') ')' )?
;
ControlOptionFORMSALIGN: {ControlOptionFORMSALIGN}
	'FORMSALIGN' ( '(' option=( '*NO' | '*YES') ')' )?
;
ControlOptionFTRANS: {ControlOptionFTRANS}
	'FTRANS' ( '(' option=( '*NONE' | '*SRC' )')')?
;
ControlOptionGENLVL:
	'GENLVL' '(' option=INT ')'
;
ControlOptionINDENT:
	'INDENT' '(' option=( '*NONE' | STRING) ')'
;
ControlOptionINTPREC:
	'INTPREC' '(' option=( '10' | '20' ) ')'
;
ControlOptionLANGID:
	'LANGID' '(' option=('*JOBRUN' | '*JOB' | STRING) ')'
;	
ControlOptionMAIN:
	'MAIN' '(' option=STRING ')'
;
ControlOptionNOMAIN:
	option='NOMAIN'
;
ControlOptionOPENOPT:
	'OPENOPT' '(' option=( ('*INZOFL' | '*NOINZOFL') | ('*CVTDATA' | '*NOCVTDATA') ) ')'
;
ControlOptionOPTIMIZE:
	'OPTIMIZE' '(' option=('*NONE' | '*BASIC' | '*FULL') ')'
;

ControlOptionOPTION:
	'OPTION' '(' options+=OptionOptions ')'
;
enum OptionOptions:
	XREF='*XREF'			|
	NOXREF='*NOXREF'		|
	SECLVL='*SECLVL'		|
	NOSECLVL='*NOSECLVL'	|
	SHOWCPY='*SHOWCPY'		|
	NOSHOWCPY='*NOSHOWCPY'	|
	EXPDDS='*EXPDDS'		|
	NOEXPDDS='*NOEXPDDS'	|
	EXP='*EXT'				|
	NOEXP='*NOEXT'			|
	SHOWSKP='*SHOWSKP'		|
	NOSHOWSKP='*NOSHOWSKP'	|
	SRCSTMT='*SRCSTMT'		|
	NOSRCSTMT='*NOSRCSTMT'	|
	DEBUGIO='*DEBUG'		|
	NODEBUGIO='*NODEBUG'	|
	UNREF='*UNREF'			|
	NOUNREF='*NOUNREF'
;

ControlOptionPGMINFO:
	'PGMINFO' '(' option=( '*PCML' | '*NO' | '*DCLCASE' ) (':' module?='*MODULE')? ')'
;

ControlOptionPRFDTA:
	'PRFDTA' '(' option=( '*NOCOL' | '*COL' ) ')'
;
ControlOptionSRTSEQ:
	'SRTSEQ' '(' option=('*HEX' | '*JOB' | '*JOBRUN' | '*LANGIDUNQ' | '*LANGIDSHR' | STRING) ')'
;
ControlOptionSTGMDL:
	'STGMDL' '(' option=('*INHERIT' | '*SNGLVL' | '*TERASPACE') ')'
;
ControlOptionTEXT:
	'TEXT' '(' option=('*SRCMBRTXT' | '*BLANK' | STRING) ')'
;
ControlOptionTHREAD:
	'THREAD' '(' option=('*CONCURRENT' | '*SERIALIZE') ')'
;

ControlOptionTIMFMT:
	'TIMFMT' '(' fmt='TODO' sep='/' ')'
;

ControlOptionTRUNCNBR:
	'TRUNCNBR' '(' option=('*YES' | '*NO') ')'
;

ControlOptionUSRPRF:
	'USRPRF' '(' option=('*USER' | '*OWNER') ')'
;

// VALIDATE - Start -------------------------------------------------
ControlOptionVALIDATE:
	// Method 1:
	'VALIDATE' '(' option='*NODATETIME' ')'

//	// Method 2:
//	'VALIDATE(*NODATETIME)'
;
// VALIDATE - End ---------------------------------------------------
	
//------------------------------------------------------------------------------
